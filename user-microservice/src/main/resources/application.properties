# DATABASE (user service)
spring.datasource.url=jdbc:mysql://localhost:3306/user_db
spring.datasource.username=root
spring.datasource.password=Marios2021!

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update

# Kafka bootstrap
spring.kafka.admin.auto-create=true
spring.kafka.admin.bootstrap-servers=localhost:9092
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

# Producer: use JsonSerializer for values, StringSerializer for keys
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Producer reliability
spring.kafka.producer.acks=all
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.retries=5
spring.kafka.producer.linger-ms=5

# Ensure JsonSerializer adds type headers (optional but useful)
spring.kafka.producer.properties.spring.json.add.type.headers=true
# trusted packages if producer uses JsonSerializer with type information
spring.kafka.producer.properties.spring.json.trusted.packages=*


#google login-register with client ID
google.oauth.client-id = 35412669219-8vcse70m1cu9me3at4kf0thptb5mfb9d.apps.googleusercontent.com

# Consumer config if user service also consumes (optional)
# spring.kafka.consumer.group-id=user-service-group
# spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# spring.kafka.consumer.properties.spring.json.trusted.packages=*
